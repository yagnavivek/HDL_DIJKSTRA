// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dijkstra_dijkstra,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck24-ubva530-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1629,HLS_SYN_LUT=3868,HLS_VERSION=2022_2}" *)

module dijkstra (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] graph;
wire   [31:0] startNode;
wire   [31:0] endNode;
wire    ap_CS_fsm_state3;
reg   [63:0] graph_read_reg_177;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln44_fu_166_p2;
reg   [0:0] icmp_ln44_reg_192;
wire    ap_CS_fsm_state7;
reg   [2:0] dist_address0;
reg    dist_ce0;
reg    dist_we0;
reg   [31:0] dist_d0;
wire   [31:0] dist_q0;
reg    dist_ce1;
reg    dist_we1;
wire   [31:0] dist_q1;
reg   [2:0] visited_address0;
reg    visited_ce0;
reg    visited_we0;
reg   [0:0] visited_d0;
wire   [0:0] visited_q0;
reg    visited_ce1;
wire   [0:0] visited_q1;
reg   [2:0] prevNode_address0;
reg    prevNode_ce0;
reg    prevNode_we0;
reg   [3:0] prevNode_d0;
wire   [3:0] prevNode_q0;
wire    grp_dijkstra_Pipeline_1_fu_120_ap_start;
wire    grp_dijkstra_Pipeline_1_fu_120_ap_done;
wire    grp_dijkstra_Pipeline_1_fu_120_ap_idle;
wire    grp_dijkstra_Pipeline_1_fu_120_ap_ready;
wire   [2:0] grp_dijkstra_Pipeline_1_fu_120_visited_address0;
wire    grp_dijkstra_Pipeline_1_fu_120_visited_ce0;
wire    grp_dijkstra_Pipeline_1_fu_120_visited_we0;
wire   [0:0] grp_dijkstra_Pipeline_1_fu_120_visited_d0;
wire    grp_dijkstra_Pipeline_2_fu_126_ap_start;
wire    grp_dijkstra_Pipeline_2_fu_126_ap_done;
wire    grp_dijkstra_Pipeline_2_fu_126_ap_idle;
wire    grp_dijkstra_Pipeline_2_fu_126_ap_ready;
wire   [2:0] grp_dijkstra_Pipeline_2_fu_126_prevNode_address0;
wire    grp_dijkstra_Pipeline_2_fu_126_prevNode_ce0;
wire    grp_dijkstra_Pipeline_2_fu_126_prevNode_we0;
wire   [3:0] grp_dijkstra_Pipeline_2_fu_126_prevNode_d0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_start;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_done;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_idle;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_ready;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_address0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_ce0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_we0;
wire   [31:0] grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_d0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_start;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_done;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_idle;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_ready;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWVALID;
wire   [63:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWADDR;
wire   [0:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWID;
wire   [31:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWLEN;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWSIZE;
wire   [1:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWBURST;
wire   [1:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWLOCK;
wire   [3:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWCACHE;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWPROT;
wire   [3:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWQOS;
wire   [3:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWREGION;
wire   [0:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWUSER;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WVALID;
wire   [31:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WDATA;
wire   [3:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WSTRB;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WLAST;
wire   [0:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WID;
wire   [0:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WUSER;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARVALID;
wire   [63:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARADDR;
wire   [0:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARID;
wire   [31:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARLEN;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARSIZE;
wire   [1:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARBURST;
wire   [1:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARLOCK;
wire   [3:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARCACHE;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARPROT;
wire   [3:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARQOS;
wire   [3:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARREGION;
wire   [0:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARUSER;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_RREADY;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_BREADY;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_address0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_ce0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_we0;
wire   [3:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_d0;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_address0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_ce0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_we0;
wire   [31:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_d0;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_address1;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_ce1;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_we1;
wire   [31:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_d1;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_address0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_ce0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_we0;
wire   [0:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_d0;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_address1;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_ce1;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_start;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_done;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_idle;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_ready;
wire   [2:0] grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_prevNode_address0;
wire    grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_prevNode_ce0;
wire    gmem_AWREADY;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    grp_dijkstra_Pipeline_1_fu_120_ap_start_reg;
reg    ap_block_state1_ignore_call19;
wire    ap_CS_fsm_state2;
reg    grp_dijkstra_Pipeline_2_fu_126_ap_start_reg;
reg    ap_block_state1_ignore_call20;
reg    grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_start_reg;
reg    ap_block_state1_ignore_call21;
reg    grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln12_fu_156_p1;
wire   [63:0] zext_ln44_fu_161_p1;
reg    ap_block_state8_on_subcall_done;
reg   [7:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 grp_dijkstra_Pipeline_1_fu_120_ap_start_reg = 1'b0;
#0 grp_dijkstra_Pipeline_2_fu_126_ap_start_reg = 1'b0;
#0 grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_start_reg = 1'b0;
#0 grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_start_reg = 1'b0;
#0 grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_start_reg = 1'b0;
end

dijkstra_dist_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dist_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dist_address0),
    .ce0(dist_ce0),
    .we0(dist_we0),
    .d0(dist_d0),
    .q0(dist_q0),
    .address1(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_address1),
    .ce1(dist_ce1),
    .we1(dist_we1),
    .d1(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_d1),
    .q1(dist_q1)
);

dijkstra_visited_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
visited_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(visited_address0),
    .ce0(visited_ce0),
    .we0(visited_we0),
    .d0(visited_d0),
    .q0(visited_q0),
    .address1(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_address1),
    .ce1(visited_ce1),
    .q1(visited_q1)
);

dijkstra_prevNode_RAM_AUTO_1R1W #(
    .DataWidth( 4 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
prevNode_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(prevNode_address0),
    .ce0(prevNode_ce0),
    .we0(prevNode_we0),
    .d0(prevNode_d0),
    .q0(prevNode_q0)
);

dijkstra_dijkstra_Pipeline_1 grp_dijkstra_Pipeline_1_fu_120(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dijkstra_Pipeline_1_fu_120_ap_start),
    .ap_done(grp_dijkstra_Pipeline_1_fu_120_ap_done),
    .ap_idle(grp_dijkstra_Pipeline_1_fu_120_ap_idle),
    .ap_ready(grp_dijkstra_Pipeline_1_fu_120_ap_ready),
    .visited_address0(grp_dijkstra_Pipeline_1_fu_120_visited_address0),
    .visited_ce0(grp_dijkstra_Pipeline_1_fu_120_visited_ce0),
    .visited_we0(grp_dijkstra_Pipeline_1_fu_120_visited_we0),
    .visited_d0(grp_dijkstra_Pipeline_1_fu_120_visited_d0)
);

dijkstra_dijkstra_Pipeline_2 grp_dijkstra_Pipeline_2_fu_126(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dijkstra_Pipeline_2_fu_126_ap_start),
    .ap_done(grp_dijkstra_Pipeline_2_fu_126_ap_done),
    .ap_idle(grp_dijkstra_Pipeline_2_fu_126_ap_idle),
    .ap_ready(grp_dijkstra_Pipeline_2_fu_126_ap_ready),
    .prevNode_address0(grp_dijkstra_Pipeline_2_fu_126_prevNode_address0),
    .prevNode_ce0(grp_dijkstra_Pipeline_2_fu_126_prevNode_ce0),
    .prevNode_we0(grp_dijkstra_Pipeline_2_fu_126_prevNode_we0),
    .prevNode_d0(grp_dijkstra_Pipeline_2_fu_126_prevNode_d0)
);

dijkstra_dijkstra_Pipeline_VITIS_LOOP_9_1 grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_start),
    .ap_done(grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_done),
    .ap_idle(grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_idle),
    .ap_ready(grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_ready),
    .dist_address0(grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_address0),
    .dist_ce0(grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_ce0),
    .dist_we0(grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_we0),
    .dist_d0(grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_d0)
);

dijkstra_dijkstra_Pipeline_VITIS_LOOP_14_2 grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_start),
    .ap_done(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_done),
    .ap_idle(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_idle),
    .ap_ready(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_ready),
    .m_axi_gmem_AWVALID(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .prevNode_address0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_address0),
    .prevNode_ce0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_ce0),
    .prevNode_we0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_we0),
    .prevNode_d0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_d0),
    .dist_address0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_address0),
    .dist_ce0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_ce0),
    .dist_we0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_we0),
    .dist_d0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_d0),
    .dist_q0(dist_q0),
    .dist_address1(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_address1),
    .dist_ce1(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_ce1),
    .dist_we1(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_we1),
    .dist_d1(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_d1),
    .dist_q1(dist_q1),
    .visited_address0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_address0),
    .visited_ce0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_ce0),
    .visited_we0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_we0),
    .visited_d0(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_d0),
    .visited_q0(visited_q0),
    .visited_address1(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_address1),
    .visited_ce1(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_ce1),
    .visited_q1(visited_q1),
    .graph(graph_read_reg_177)
);

dijkstra_dijkstra_Pipeline_VITIS_LOOP_56_5 grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_start),
    .ap_done(grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_done),
    .ap_idle(grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_idle),
    .ap_ready(grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_ready),
    .endNode(endNode),
    .startNode(startNode),
    .prevNode_address0(grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_prevNode_address0),
    .prevNode_ce0(grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_prevNode_ce0),
    .prevNode_q0(prevNode_q0)
);

dijkstra_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .graph(graph),
    .startNode(startNode),
    .endNode(endNode),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

dijkstra_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARADDR),
    .I_ARLEN(grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dijkstra_Pipeline_1_fu_120_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_dijkstra_Pipeline_1_fu_120_ap_start_reg <= 1'b1;
        end else if ((grp_dijkstra_Pipeline_1_fu_120_ap_ready == 1'b1)) begin
            grp_dijkstra_Pipeline_1_fu_120_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dijkstra_Pipeline_2_fu_126_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_dijkstra_Pipeline_2_fu_126_ap_start_reg <= 1'b1;
        end else if ((grp_dijkstra_Pipeline_2_fu_126_ap_ready == 1'b1)) begin
            grp_dijkstra_Pipeline_2_fu_126_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_start_reg <= 1'b1;
        end else if ((grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_ready == 1'b1)) begin
            grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln44_fu_166_p2 == 1'd0))) begin
            grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_start_reg <= 1'b1;
        end else if ((grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_ready == 1'b1)) begin
            grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_start_reg <= 1'b1;
        end else if ((grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_ready == 1'b1)) begin
            grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        graph_read_reg_177 <= graph;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln44_reg_192 <= icmp_ln44_fu_166_p2;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state8_on_subcall_done)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dist_address0 = zext_ln44_fu_161_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        dist_address0 = zext_ln12_fu_156_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dist_address0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dist_address0 = grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_address0;
    end else begin
        dist_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6))) begin
        dist_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dist_ce0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dist_ce0 = grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_ce0;
    end else begin
        dist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dist_ce1 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_ce1;
    end else begin
        dist_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dist_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dist_d0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dist_d0 = grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_d0;
    end else begin
        dist_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dist_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dist_we0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dist_we0 = grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_dist_we0;
    end else begin
        dist_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dist_we1 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_dist_we1;
    end else begin
        dist_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARVALID = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_RREADY = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln44_reg_192 == 1'd0))) begin
        prevNode_address0 = grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_prevNode_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        prevNode_address0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        prevNode_address0 = grp_dijkstra_Pipeline_2_fu_126_prevNode_address0;
    end else begin
        prevNode_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln44_reg_192 == 1'd0))) begin
        prevNode_ce0 = grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_prevNode_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        prevNode_ce0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        prevNode_ce0 = grp_dijkstra_Pipeline_2_fu_126_prevNode_ce0;
    end else begin
        prevNode_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        prevNode_d0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        prevNode_d0 = grp_dijkstra_Pipeline_2_fu_126_prevNode_d0;
    end else begin
        prevNode_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        prevNode_we0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_prevNode_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        prevNode_we0 = grp_dijkstra_Pipeline_2_fu_126_prevNode_we0;
    end else begin
        prevNode_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        visited_address0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        visited_address0 = grp_dijkstra_Pipeline_1_fu_120_visited_address0;
    end else begin
        visited_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        visited_ce0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        visited_ce0 = grp_dijkstra_Pipeline_1_fu_120_visited_ce0;
    end else begin
        visited_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        visited_ce1 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_ce1;
    end else begin
        visited_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        visited_d0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        visited_d0 = grp_dijkstra_Pipeline_1_fu_120_visited_d0;
    end else begin
        visited_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        visited_we0 = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_visited_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        visited_we0 = grp_dijkstra_Pipeline_1_fu_120_visited_we0;
    end else begin
        visited_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call19 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call20 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call21 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_done == 1'b0) | (grp_dijkstra_Pipeline_2_fu_126_ap_done == 1'b0) | (grp_dijkstra_Pipeline_1_fu_120_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_done == 1'b0) & (icmp_ln44_reg_192 == 1'd0));
end

assign grp_dijkstra_Pipeline_1_fu_120_ap_start = grp_dijkstra_Pipeline_1_fu_120_ap_start_reg;

assign grp_dijkstra_Pipeline_2_fu_126_ap_start = grp_dijkstra_Pipeline_2_fu_126_ap_start_reg;

assign grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_start = grp_dijkstra_Pipeline_VITIS_LOOP_14_2_fu_138_ap_start_reg;

assign grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_start = grp_dijkstra_Pipeline_VITIS_LOOP_56_5_fu_149_ap_start_reg;

assign grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_start = grp_dijkstra_Pipeline_VITIS_LOOP_9_1_fu_132_ap_start_reg;

assign icmp_ln44_fu_166_p2 = ((dist_q0 == 32'd2147483647) ? 1'b1 : 1'b0);

assign zext_ln12_fu_156_p1 = startNode;

assign zext_ln44_fu_161_p1 = endNode;

endmodule //dijkstra
