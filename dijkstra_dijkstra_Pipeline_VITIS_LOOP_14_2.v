// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dijkstra_dijkstra_Pipeline_VITIS_LOOP_14_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        prevNode_address0,
        prevNode_ce0,
        prevNode_we0,
        prevNode_d0,
        dist_address0,
        dist_ce0,
        dist_we0,
        dist_d0,
        dist_q0,
        dist_address1,
        dist_ce1,
        dist_we1,
        dist_d1,
        dist_q1,
        visited_address0,
        visited_ce0,
        visited_we0,
        visited_d0,
        visited_q0,
        visited_address1,
        visited_ce1,
        visited_q1,
        graph
);

parameter    ap_ST_fsm_pp0_stage0 = 85'd1;
parameter    ap_ST_fsm_pp0_stage1 = 85'd2;
parameter    ap_ST_fsm_pp0_stage2 = 85'd4;
parameter    ap_ST_fsm_pp0_stage3 = 85'd8;
parameter    ap_ST_fsm_pp0_stage4 = 85'd16;
parameter    ap_ST_fsm_pp0_stage5 = 85'd32;
parameter    ap_ST_fsm_pp0_stage6 = 85'd64;
parameter    ap_ST_fsm_pp0_stage7 = 85'd128;
parameter    ap_ST_fsm_pp0_stage8 = 85'd256;
parameter    ap_ST_fsm_pp0_stage9 = 85'd512;
parameter    ap_ST_fsm_pp0_stage10 = 85'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 85'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 85'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 85'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 85'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 85'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 85'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 85'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 85'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 85'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 85'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 85'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 85'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 85'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 85'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 85'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 85'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 85'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 85'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 85'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 85'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 85'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 85'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 85'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 85'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 85'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 85'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 85'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 85'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 85'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 85'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 85'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 85'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 85'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 85'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 85'd35184372088832;
parameter    ap_ST_fsm_pp0_stage46 = 85'd70368744177664;
parameter    ap_ST_fsm_pp0_stage47 = 85'd140737488355328;
parameter    ap_ST_fsm_pp0_stage48 = 85'd281474976710656;
parameter    ap_ST_fsm_pp0_stage49 = 85'd562949953421312;
parameter    ap_ST_fsm_pp0_stage50 = 85'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage51 = 85'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage52 = 85'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage53 = 85'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage54 = 85'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage55 = 85'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage56 = 85'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage57 = 85'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage58 = 85'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage59 = 85'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage60 = 85'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage61 = 85'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage62 = 85'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage63 = 85'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage64 = 85'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage65 = 85'd36893488147419103232;
parameter    ap_ST_fsm_pp0_stage66 = 85'd73786976294838206464;
parameter    ap_ST_fsm_pp0_stage67 = 85'd147573952589676412928;
parameter    ap_ST_fsm_pp0_stage68 = 85'd295147905179352825856;
parameter    ap_ST_fsm_pp0_stage69 = 85'd590295810358705651712;
parameter    ap_ST_fsm_pp0_stage70 = 85'd1180591620717411303424;
parameter    ap_ST_fsm_pp0_stage71 = 85'd2361183241434822606848;
parameter    ap_ST_fsm_pp0_stage72 = 85'd4722366482869645213696;
parameter    ap_ST_fsm_pp0_stage73 = 85'd9444732965739290427392;
parameter    ap_ST_fsm_pp0_stage74 = 85'd18889465931478580854784;
parameter    ap_ST_fsm_pp0_stage75 = 85'd37778931862957161709568;
parameter    ap_ST_fsm_pp0_stage76 = 85'd75557863725914323419136;
parameter    ap_ST_fsm_pp0_stage77 = 85'd151115727451828646838272;
parameter    ap_ST_fsm_pp0_stage78 = 85'd302231454903657293676544;
parameter    ap_ST_fsm_pp0_stage79 = 85'd604462909807314587353088;
parameter    ap_ST_fsm_pp0_stage80 = 85'd1208925819614629174706176;
parameter    ap_ST_fsm_pp0_stage81 = 85'd2417851639229258349412352;
parameter    ap_ST_fsm_pp0_stage82 = 85'd4835703278458516698824704;
parameter    ap_ST_fsm_pp0_stage83 = 85'd9671406556917033397649408;
parameter    ap_ST_fsm_pp0_stage84 = 85'd19342813113834066795298816;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
output  [2:0] prevNode_address0;
output   prevNode_ce0;
output   prevNode_we0;
output  [3:0] prevNode_d0;
output  [2:0] dist_address0;
output   dist_ce0;
output   dist_we0;
output  [31:0] dist_d0;
input  [31:0] dist_q0;
output  [2:0] dist_address1;
output   dist_ce1;
output   dist_we1;
output  [31:0] dist_d1;
input  [31:0] dist_q1;
output  [2:0] visited_address0;
output   visited_ce0;
output   visited_we0;
output  [0:0] visited_d0;
input  [0:0] visited_q0;
output  [2:0] visited_address1;
output   visited_ce1;
input  [0:0] visited_q1;
input  [63:0] graph;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg m_axi_gmem_RREADY;
reg[2:0] prevNode_address0;
reg prevNode_ce0;
reg prevNode_we0;
reg[2:0] dist_address0;
reg dist_ce0;
reg dist_we0;
reg[2:0] dist_address1;
reg dist_ce1;
reg dist_we1;
reg[31:0] dist_d1;
reg[2:0] visited_address0;
reg visited_ce0;
reg visited_we0;
reg[2:0] visited_address1;
reg visited_ce1;

(* fsm_encoding = "none" *) reg   [84:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage84;
wire    ap_block_state85_pp0_stage84_iter0;
wire    ap_block_pp0_stage84_subdone;
reg   [0:0] icmp_ln28_reg_913;
reg   [0:0] icmp_ln14_reg_811;
reg    ap_condition_exit_pp0_iter0_stage84;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage78;
wire    ap_block_pp0_stage78;
wire    ap_CS_fsm_pp0_stage77;
wire    ap_block_pp0_stage77;
wire    ap_CS_fsm_pp0_stage76;
wire    ap_block_pp0_stage76;
wire    ap_CS_fsm_pp0_stage75;
wire    ap_block_pp0_stage75;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage74;
wire    ap_block_pp0_stage74;
reg   [31:0] reg_312;
reg    ap_predicate_op267_read_state75;
reg    ap_block_state75_pp0_stage74_iter0;
reg    ap_block_pp0_stage74_11001;
reg    ap_predicate_op294_read_state78;
reg    ap_block_state78_pp0_stage77_iter0;
reg    ap_block_pp0_stage77_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state86_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] i_reg_790;
wire   [2:0] visited_addr_3_reg_795;
wire   [2:0] dist_addr_5_reg_806;
wire   [0:0] icmp_ln14_fu_347_p2;
wire   [2:0] visited_addr_1_reg_815;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [2:0] dist_addr_4_reg_826;
reg   [31:0] dist_load_reg_837;
reg   [0:0] visited_load_1_reg_844;
reg   [0:0] visited_load_2_reg_849;
wire   [2:0] dist_addr_reg_854;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [2:0] visited_addr_reg_859;
wire   [2:0] dist_addr_1_reg_864;
reg   [0:0] visited_load_reg_869;
wire   [0:0] addr_cmp_fu_353_p2;
reg   [0:0] addr_cmp_reg_874;
reg   [31:0] dist_load_1_reg_879;
reg   [31:0] dist_load_2_reg_886;
reg   [0:0] visited_load_3_reg_893;
reg   [31:0] dist_load_3_reg_898;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] dist_load_4_reg_903;
wire   [3:0] select_ln21_14_fu_605_p3;
reg   [3:0] select_ln21_14_reg_908;
wire   [0:0] icmp_ln28_fu_613_p2;
reg   [2:0] dist_addr_3_reg_917;
reg   [63:0] gmem_addr_reg_922;
wire   [0:0] grp_fu_316_p2;
reg   [0:0] icmp_ln35_reg_928;
reg    ap_predicate_op271_read_state76;
reg    ap_block_state76_pp0_stage75_iter0;
reg    ap_block_pp0_stage75_11001;
reg   [31:0] gmem_addr_read_1_reg_932;
reg   [0:0] visited_load_5_reg_938;
reg    ap_predicate_op278_read_state77;
reg    ap_block_state77_pp0_stage76_iter0;
reg    ap_block_pp0_stage76_11001;
wire   [0:0] icmp_ln35_1_fu_699_p2;
reg   [0:0] icmp_ln35_1_reg_942;
reg   [31:0] gmem_addr_read_2_reg_946;
reg   [0:0] visited_load_6_reg_958;
wire   [0:0] icmp_ln35_2_fu_709_p2;
reg   [0:0] icmp_ln35_2_reg_962;
reg   [0:0] visited_load_7_reg_966;
reg    ap_predicate_op301_read_state79;
reg    ap_block_state79_pp0_stage78_iter0;
reg    ap_block_pp0_stage78_11001;
reg   [0:0] icmp_ln35_3_reg_970;
reg   [31:0] gmem_addr_read_4_reg_974;
reg   [0:0] visited_load_8_reg_986;
wire    ap_CS_fsm_pp0_stage79;
wire    ap_block_state80_pp0_stage79_iter0;
wire    ap_block_pp0_stage79_11001;
wire   [0:0] icmp_ln35_4_fu_725_p2;
reg   [0:0] icmp_ln35_4_reg_990;
reg   [0:0] visited_load_9_reg_994;
wire    ap_CS_fsm_pp0_stage80;
wire    ap_block_state81_pp0_stage80_iter0;
wire    ap_block_pp0_stage80_11001;
wire    ap_block_pp0_stage84_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln31_fu_623_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage79;
wire    ap_CS_fsm_pp0_stage81;
wire    ap_block_pp0_stage81;
wire    ap_CS_fsm_pp0_stage83;
wire    ap_block_pp0_stage83;
wire    ap_block_pp0_stage84;
wire  signed [63:0] sext_ln33_fu_684_p1;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_predicate_op197_readreq_state5;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage4_11001;
reg   [63:0] reuse_addr_reg_fu_100;
wire    ap_loop_init;
reg   [0:0] reuse_reg_fu_104;
reg   [2:0] i_1_fu_108;
wire   [2:0] i_2_fu_359_p2;
reg   [2:0] ap_sig_allocacmp_i;
wire   [0:0] grp_fu_306_p2;
wire   [0:0] icmp_ln36_1_fu_704_p2;
wire   [31:0] grp_fu_322_p2;
wire   [0:0] icmp_ln36_6_fu_720_p2;
wire   [31:0] add_ln36_1_fu_714_p2;
wire    ap_block_pp0_stage80;
wire    ap_block_state82_pp0_stage81_iter0;
wire    ap_block_pp0_stage81_11001;
wire   [0:0] icmp_ln36_7_fu_736_p2;
wire   [31:0] add_ln36_2_fu_730_p2;
wire    ap_CS_fsm_pp0_stage82;
wire    ap_block_state83_pp0_stage82_iter0;
wire    ap_block_pp0_stage82_11001;
wire    ap_block_pp0_stage82;
wire    ap_block_state84_pp0_stage83_iter0;
wire    ap_block_pp0_stage83_11001;
wire   [0:0] icmp_ln36_8_fu_741_p2;
wire   [0:0] icmp_ln36_9_fu_752_p2;
wire   [31:0] add_ln36_4_fu_746_p2;
wire   [0:0] reuse_select_fu_367_p3;
wire   [0:0] icmp_ln21_fu_373_p2;
wire   [0:0] or_ln21_fu_378_p2;
wire   [0:0] addr_cmp3_fu_402_p2;
wire   [31:0] select_ln21_fu_392_p3;
wire   [0:0] icmp_ln21_1_fu_415_p2;
wire   [1:0] select_ln21_15_fu_384_p3;
wire   [0:0] reuse_select4_fu_408_p3;
wire   [1:0] select_ln21_1_fu_420_p3;
wire   [1:0] select_ln21_8_fu_435_p3;
wire   [31:0] select_ln21_5_fu_428_p3;
wire   [0:0] addr_cmp7_fu_461_p2;
wire   [31:0] select_ln21_9_fu_447_p3;
wire   [0:0] icmp_ln21_2_fu_474_p2;
wire  signed [2:0] sext_ln21_fu_443_p1;
wire   [0:0] reuse_select8_fu_467_p3;
wire   [2:0] select_ln21_2_fu_479_p3;
wire   [31:0] select_ln21_6_fu_487_p3;
wire   [0:0] addr_cmp11_fu_516_p2;
wire   [31:0] select_ln21_11_fu_502_p3;
wire   [0:0] icmp_ln21_3_fu_529_p2;
wire   [2:0] select_ln21_10_fu_494_p3;
wire   [0:0] reuse_select12_fu_522_p3;
wire   [2:0] select_ln21_3_fu_535_p3;
wire   [2:0] select_ln21_12_fu_551_p3;
wire   [31:0] select_ln21_7_fu_543_p3;
wire   [0:0] addr_cmp15_fu_577_p2;
wire   [31:0] select_ln21_13_fu_563_p3;
wire   [0:0] icmp_ln21_4_fu_591_p2;
wire  signed [3:0] sext_ln21_1_fu_559_p1;
wire   [0:0] reuse_select16_fu_583_p3;
wire   [3:0] select_ln21_4_fu_597_p3;
wire   [2:0] trunc_ln31_fu_619_p1;
wire   [6:0] shl_ln_fu_639_p3;
wire   [4:0] shl_ln33_1_fu_651_p3;
wire   [63:0] zext_ln33_1_fu_659_p1;
wire   [63:0] add_ln33_1_fu_663_p2;
wire   [63:0] zext_ln33_fu_647_p1;
wire   [63:0] add_ln33_fu_668_p2;
wire   [61:0] trunc_ln1_fu_674_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [84:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_state33_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_state34_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_state35_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_state36_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_state37_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_state38_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_state39_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_state40_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_state41_pp0_stage40_iter0;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_state42_pp0_stage41_iter0;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_state43_pp0_stage42_iter0;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_state44_pp0_stage43_iter0;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_state45_pp0_stage44_iter0;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_state46_pp0_stage45_iter0;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_state47_pp0_stage46_iter0;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_state48_pp0_stage47_iter0;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_state49_pp0_stage48_iter0;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_state50_pp0_stage49_iter0;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_state51_pp0_stage50_iter0;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_state52_pp0_stage51_iter0;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_state53_pp0_stage52_iter0;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_state54_pp0_stage53_iter0;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_state55_pp0_stage54_iter0;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_state56_pp0_stage55_iter0;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_state57_pp0_stage56_iter0;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_state58_pp0_stage57_iter0;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_state59_pp0_stage58_iter0;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_state60_pp0_stage59_iter0;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_state61_pp0_stage60_iter0;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_state62_pp0_stage61_iter0;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_state63_pp0_stage62_iter0;
wire    ap_block_pp0_stage62_subdone;
wire    ap_block_state64_pp0_stage63_iter0;
wire    ap_block_pp0_stage63_subdone;
wire    ap_block_state65_pp0_stage64_iter0;
wire    ap_block_pp0_stage64_subdone;
wire    ap_block_state66_pp0_stage65_iter0;
wire    ap_block_pp0_stage65_subdone;
wire    ap_block_state67_pp0_stage66_iter0;
wire    ap_block_pp0_stage66_subdone;
wire    ap_block_state68_pp0_stage67_iter0;
wire    ap_block_pp0_stage67_subdone;
wire    ap_block_state69_pp0_stage68_iter0;
wire    ap_block_pp0_stage68_subdone;
wire    ap_block_state70_pp0_stage69_iter0;
wire    ap_block_pp0_stage69_subdone;
wire    ap_block_state71_pp0_stage70_iter0;
wire    ap_block_pp0_stage70_subdone;
wire    ap_block_state72_pp0_stage71_iter0;
wire    ap_block_pp0_stage71_subdone;
wire    ap_block_state73_pp0_stage72_iter0;
wire    ap_block_pp0_stage72_subdone;
wire    ap_block_state74_pp0_stage73_iter0;
wire    ap_block_pp0_stage73_subdone;
reg    ap_block_pp0_stage74_subdone;
reg    ap_block_pp0_stage75_subdone;
reg    ap_block_pp0_stage76_subdone;
reg    ap_block_pp0_stage77_subdone;
reg    ap_block_pp0_stage78_subdone;
wire    ap_block_pp0_stage79_subdone;
wire    ap_block_pp0_stage80_subdone;
wire    ap_block_pp0_stage81_subdone;
wire    ap_block_pp0_stage82_subdone;
wire    ap_block_pp0_stage83_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 85'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dijkstra_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage84),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage84) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage84_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter0_stage84) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage84) & (1'b0 == ap_block_pp0_stage84_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_1_fu_108 <= 3'd0;
    end else if (((icmp_ln28_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_1_fu_108 <= i_2_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_addr_reg_fu_100 <= 64'd18446744073709551615;
    end else if (((icmp_ln28_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        reuse_addr_reg_fu_100 <= zext_ln31_fu_623_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_reg_fu_104 <= 1'd0;
    end else if (((icmp_ln28_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        reuse_reg_fu_104 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        addr_cmp_reg_874 <= addr_cmp_fu_353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        dist_addr_3_reg_917 <= zext_ln31_fu_623_p1;
        gmem_addr_reg_922 <= sext_ln33_fu_684_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        dist_load_1_reg_879 <= dist_q1;
        dist_load_2_reg_886 <= dist_q0;
        visited_load_3_reg_893 <= visited_q0;
        visited_load_reg_869 <= visited_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        dist_load_3_reg_898 <= dist_q1;
        dist_load_4_reg_903 <= dist_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        dist_load_reg_837 <= dist_q1;
        visited_load_1_reg_844 <= visited_q1;
        visited_load_2_reg_849 <= visited_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op271_read_state76 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage75) & (1'b0 == ap_block_pp0_stage75_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_addr_read_1_reg_932 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op278_read_state77 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage76) & (1'b0 == ap_block_pp0_stage76_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_addr_read_2_reg_946 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op301_read_state79 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage78) & (1'b0 == ap_block_pp0_stage78_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_addr_read_4_reg_974 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_790 <= ap_sig_allocacmp_i;
        icmp_ln14_reg_811 <= icmp_ln14_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        icmp_ln28_reg_913 <= icmp_ln28_fu_613_p2;
        select_ln21_14_reg_908 <= select_ln21_14_fu_605_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage76) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage76_11001))) begin
        icmp_ln35_1_reg_942 <= icmp_ln35_1_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage77) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage77_11001))) begin
        icmp_ln35_2_reg_962 <= icmp_ln35_2_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage78) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage78_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        icmp_ln35_3_reg_970 <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage79) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage79_11001))) begin
        icmp_ln35_4_reg_990 <= icmp_ln35_4_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage75) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage75_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        icmp_ln35_reg_928 <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_predicate_op294_read_state78 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op267_read_state75 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage74) & (1'b0 == ap_block_pp0_stage74_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_312 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_reg_928 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage76) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage76_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        visited_load_5_reg_938 <= visited_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_1_reg_942 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage77) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage77_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        visited_load_6_reg_958 <= visited_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_2_reg_962 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage78) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage78_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        visited_load_7_reg_966 <= visited_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_3_reg_970 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage79) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage79_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        visited_load_8_reg_986 <= visited_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_4_reg_990 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage80) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage80_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        visited_load_9_reg_994 <= visited_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage84) & (1'b0 == ap_block_pp0_stage84_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & ((icmp_ln14_reg_811 == 1'd1) | (icmp_ln28_reg_913 == 1'd1)))) begin
        ap_condition_exit_pp0_iter0_stage84 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage84 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage84) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage84_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage84) & (1'b0 == ap_block_pp0_stage84_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i = 3'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_108;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        dist_address0 = dist_addr_reg_854;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage82) & (1'b0 == ap_block_pp0_stage82) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage80) & (1'b0 == ap_block_pp0_stage80) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage76) & (1'b0 == ap_block_pp0_stage76) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage78) & (1'b0 == ap_block_pp0_stage78) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage84) & (1'b0 == ap_block_pp0_stage84) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        dist_address0 = dist_addr_3_reg_917;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        dist_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        dist_address0 = 64'd2;
    end else begin
        dist_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage83) & (1'b0 == ap_block_pp0_stage83))) begin
            dist_address1 = dist_addr_1_reg_864;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage81) & (1'b0 == ap_block_pp0_stage81))) begin
            dist_address1 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79))) begin
            dist_address1 = dist_addr_4_reg_826;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77))) begin
            dist_address1 = dist_addr_5_reg_806;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            dist_address1 = 64'd3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            dist_address1 = 64'd1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            dist_address1 = 64'd0;
        end else begin
            dist_address1 = 'bx;
        end
    end else begin
        dist_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage82) & (1'b0 == ap_block_pp0_stage82_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage80) & (1'b0 == ap_block_pp0_stage80_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage76) & (1'b0 == ap_block_pp0_stage76_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage78) & (1'b0 == ap_block_pp0_stage78_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage84) & (1'b0 == ap_block_pp0_stage84_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        dist_ce0 = 1'b1;
    end else begin
        dist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage83) & (1'b0 == ap_block_pp0_stage83_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage81) & (1'b0 == ap_block_pp0_stage81_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        dist_ce1 = 1'b1;
    end else begin
        dist_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage81) & (1'b0 == ap_block_pp0_stage81) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        dist_d1 = add_ln36_2_fu_730_p2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        dist_d1 = add_ln36_1_fu_714_p2;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage83) & (1'b0 == ap_block_pp0_stage83) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        dist_d1 = grp_fu_322_p2;
    end else begin
        dist_d1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln36_9_fu_752_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_9_reg_994 == 1'd0) & (icmp_ln35_4_reg_990 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        dist_we0 = 1'b1;
    end else begin
        dist_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln36_8_fu_741_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_8_reg_986 == 1'd0) & (icmp_ln35_3_reg_970 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage83) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage83_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln36_7_fu_736_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_7_reg_966 == 1'd0) & (icmp_ln35_2_reg_962 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage81) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage81_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln36_6_fu_720_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_6_reg_958 == 1'd0) & (icmp_ln35_1_reg_942 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage79) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage79_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln36_1_fu_704_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_5_reg_938 == 1'd0) & (icmp_ln35_reg_928 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage77) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage77_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        dist_we1 = 1'b1;
    end else begin
        dist_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage74) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage74) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage75) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage75) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage76) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage76) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage77) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage77) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage78) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage78) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op197_readreq_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op301_read_state79 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage78) & (1'b0 == ap_block_pp0_stage78_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op278_read_state77 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage76) & (1'b0 == ap_block_pp0_stage76_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op271_read_state76 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage75) & (1'b0 == ap_block_pp0_stage75_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op294_read_state78 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op267_read_state75 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage74) & (1'b0 == ap_block_pp0_stage74_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        prevNode_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage83) & (1'b0 == ap_block_pp0_stage83) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prevNode_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage81) & (1'b0 == ap_block_pp0_stage81) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prevNode_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prevNode_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prevNode_address0 = 64'd0;
    end else begin
        prevNode_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage83) & (1'b0 == ap_block_pp0_stage83_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage81) & (1'b0 == ap_block_pp0_stage81_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        prevNode_ce0 = 1'b1;
    end else begin
        prevNode_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln36_9_fu_752_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_9_reg_994 == 1'd0) & (icmp_ln35_4_reg_990 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln36_8_fu_741_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_8_reg_986 == 1'd0) & (icmp_ln35_3_reg_970 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage83) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage83_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln36_7_fu_736_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_7_reg_966 == 1'd0) & (icmp_ln35_2_reg_962 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage81) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage81_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln36_6_fu_720_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_6_reg_958 == 1'd0) & (icmp_ln35_1_reg_942 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage79) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage79_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln36_1_fu_704_p2 == 1'd1) & (grp_fu_306_p2 == 1'd0) & (visited_load_5_reg_938 == 1'd0) & (icmp_ln35_reg_928 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage77) & (icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0) & (1'b0 == ap_block_pp0_stage77_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        prevNode_we0 = 1'b1;
    end else begin
        prevNode_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79))) begin
            visited_address0 = visited_addr_reg_859;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage78) & (1'b0 == ap_block_pp0_stage78))) begin
            visited_address0 = visited_addr_1_reg_815;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77))) begin
            visited_address0 = visited_addr_3_reg_795;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage76) & (1'b0 == ap_block_pp0_stage76))) begin
            visited_address0 = 64'd1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage75) & (1'b0 == ap_block_pp0_stage75))) begin
            visited_address0 = 64'd0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            visited_address0 = zext_ln31_fu_623_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            visited_address0 = 64'd4;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            visited_address0 = 64'd3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            visited_address0 = 64'd2;
        end else begin
            visited_address0 = 'bx;
        end
    end else begin
        visited_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            visited_address1 = 64'd0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            visited_address1 = 64'd1;
        end else begin
            visited_address1 = 'bx;
        end
    end else begin
        visited_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage75) & (1'b0 == ap_block_pp0_stage75_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage76) & (1'b0 == ap_block_pp0_stage76_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage78) & (1'b0 == ap_block_pp0_stage78_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        visited_ce0 = 1'b1;
    end else begin
        visited_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        visited_ce1 = 1'b1;
    end else begin
        visited_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln28_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln14_reg_811 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        visited_we0 = 1'b1;
    end else begin
        visited_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_pp0_stage64 : begin
            if ((1'b0 == ap_block_pp0_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end
        end
        ap_ST_fsm_pp0_stage65 : begin
            if ((1'b0 == ap_block_pp0_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end
        end
        ap_ST_fsm_pp0_stage66 : begin
            if ((1'b0 == ap_block_pp0_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end
        end
        ap_ST_fsm_pp0_stage67 : begin
            if ((1'b0 == ap_block_pp0_stage67_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end
        end
        ap_ST_fsm_pp0_stage68 : begin
            if ((1'b0 == ap_block_pp0_stage68_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end
        end
        ap_ST_fsm_pp0_stage69 : begin
            if ((1'b0 == ap_block_pp0_stage69_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end
        end
        ap_ST_fsm_pp0_stage70 : begin
            if ((1'b0 == ap_block_pp0_stage70_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end
        end
        ap_ST_fsm_pp0_stage71 : begin
            if ((1'b0 == ap_block_pp0_stage71_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end
        end
        ap_ST_fsm_pp0_stage72 : begin
            if ((1'b0 == ap_block_pp0_stage72_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end
        end
        ap_ST_fsm_pp0_stage73 : begin
            if ((1'b0 == ap_block_pp0_stage73_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end
        end
        ap_ST_fsm_pp0_stage74 : begin
            if ((1'b0 == ap_block_pp0_stage74_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end
        end
        ap_ST_fsm_pp0_stage75 : begin
            if ((1'b0 == ap_block_pp0_stage75_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end
        end
        ap_ST_fsm_pp0_stage76 : begin
            if ((1'b0 == ap_block_pp0_stage76_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end
        end
        ap_ST_fsm_pp0_stage77 : begin
            if ((1'b0 == ap_block_pp0_stage77_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end
        end
        ap_ST_fsm_pp0_stage78 : begin
            if ((1'b0 == ap_block_pp0_stage78_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end
        end
        ap_ST_fsm_pp0_stage79 : begin
            if ((1'b0 == ap_block_pp0_stage79_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end
        end
        ap_ST_fsm_pp0_stage80 : begin
            if ((1'b0 == ap_block_pp0_stage80_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage80;
            end
        end
        ap_ST_fsm_pp0_stage81 : begin
            if ((1'b0 == ap_block_pp0_stage81_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage81;
            end
        end
        ap_ST_fsm_pp0_stage82 : begin
            if ((1'b0 == ap_block_pp0_stage82_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage82;
            end
        end
        ap_ST_fsm_pp0_stage83 : begin
            if ((1'b0 == ap_block_pp0_stage83_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage83;
            end
        end
        ap_ST_fsm_pp0_stage84 : begin
            if ((1'b0 == ap_block_pp0_stage84_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage84;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln33_1_fu_663_p2 = (zext_ln33_1_fu_659_p1 + graph);

assign add_ln33_fu_668_p2 = (add_ln33_1_fu_663_p2 + zext_ln33_fu_647_p1);

assign add_ln36_1_fu_714_p2 = (dist_q0 + gmem_addr_read_1_reg_932);

assign add_ln36_2_fu_730_p2 = (dist_q0 + gmem_addr_read_2_reg_946);

assign add_ln36_4_fu_746_p2 = (dist_q0 + gmem_addr_read_4_reg_974);

assign addr_cmp11_fu_516_p2 = ((reuse_addr_reg_fu_100 == 64'd3) ? 1'b1 : 1'b0);

assign addr_cmp15_fu_577_p2 = ((reuse_addr_reg_fu_100 == 64'd4) ? 1'b1 : 1'b0);

assign addr_cmp3_fu_402_p2 = ((reuse_addr_reg_fu_100 == 64'd1) ? 1'b1 : 1'b0);

assign addr_cmp7_fu_461_p2 = ((reuse_addr_reg_fu_100 == 64'd2) ? 1'b1 : 1'b0);

assign addr_cmp_fu_353_p2 = ((reuse_addr_reg_fu_100 == 64'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage74 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_pp0_stage75 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_pp0_stage76 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_pp0_stage77 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_pp0_stage78 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp0_stage79 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_pp0_stage80 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp0_stage81 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_pp0_stage82 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_pp0_stage83 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_pp0_stage84 = ap_CS_fsm[32'd84];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage68_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage69_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage70_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage73_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage74_11001 = ((ap_predicate_op267_read_state75 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage74_subdone = ((ap_predicate_op267_read_state75 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage75 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage75_11001 = ((ap_predicate_op271_read_state76 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage75_subdone = ((ap_predicate_op271_read_state76 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage76 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage76_11001 = ((ap_predicate_op278_read_state77 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage76_subdone = ((ap_predicate_op278_read_state77 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage77 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage77_11001 = ((ap_predicate_op294_read_state78 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage77_subdone = ((ap_predicate_op294_read_state78 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage78 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage78_11001 = ((ap_predicate_op301_read_state79 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage78_subdone = ((ap_predicate_op301_read_state79 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage79 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage81 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage81_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage81_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage82 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage82_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage82_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage83 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage83_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage83_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage84 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage84_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage84_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((ap_predicate_op197_readreq_state5 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage64_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage65_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage66_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage67_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage68_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage69_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage70_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage71_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage72_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage73_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state75_pp0_stage74_iter0 = ((ap_predicate_op267_read_state75 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state76_pp0_stage75_iter0 = ((ap_predicate_op271_read_state76 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state77_pp0_stage76_iter0 = ((ap_predicate_op278_read_state77 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state78_pp0_stage77_iter0 = ((ap_predicate_op294_read_state78 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state79_pp0_stage78_iter0 = ((ap_predicate_op301_read_state79 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage79_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage80_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage81_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage82_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage83_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage84_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage84;

always @ (*) begin
    ap_predicate_op197_readreq_state5 = ((icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0));
end

always @ (*) begin
    ap_predicate_op267_read_state75 = ((icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0));
end

always @ (*) begin
    ap_predicate_op271_read_state76 = ((icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0));
end

always @ (*) begin
    ap_predicate_op278_read_state77 = ((icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0));
end

always @ (*) begin
    ap_predicate_op294_read_state78 = ((icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0));
end

always @ (*) begin
    ap_predicate_op301_read_state79 = ((icmp_ln14_reg_811 == 1'd0) & (icmp_ln28_reg_913 == 1'd0));
end

assign dist_addr_1_reg_864 = 64'd3;

assign dist_addr_4_reg_826 = 64'd1;

assign dist_addr_5_reg_806 = 64'd0;

assign dist_addr_reg_854 = 64'd4;

assign dist_d0 = add_ln36_4_fu_746_p2;

assign grp_fu_306_p2 = ((dist_q0 == 32'd2147483647) ? 1'b1 : 1'b0);

assign grp_fu_316_p2 = (($signed(reg_312) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_322_p2 = (dist_q0 + reg_312);

assign i_2_fu_359_p2 = (i_reg_790 + 3'd1);

assign icmp_ln14_fu_347_p2 = ((ap_sig_allocacmp_i == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln21_1_fu_415_p2 = (($signed(select_ln21_fu_392_p3) > $signed(dist_load_1_reg_879)) ? 1'b1 : 1'b0);

assign icmp_ln21_2_fu_474_p2 = (($signed(select_ln21_9_fu_447_p3) > $signed(dist_load_2_reg_886)) ? 1'b1 : 1'b0);

assign icmp_ln21_3_fu_529_p2 = (($signed(select_ln21_11_fu_502_p3) > $signed(dist_q1)) ? 1'b1 : 1'b0);

assign icmp_ln21_4_fu_591_p2 = (($signed(select_ln21_13_fu_563_p3) > $signed(dist_q0)) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_373_p2 = ((dist_load_reg_837 == 32'd2147483647) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_613_p2 = ((select_ln21_14_fu_605_p3 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln35_1_fu_699_p2 = (($signed(gmem_addr_read_1_reg_932) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln35_2_fu_709_p2 = (($signed(gmem_addr_read_2_reg_946) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln35_4_fu_725_p2 = (($signed(gmem_addr_read_4_reg_974) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln36_1_fu_704_p2 = (($signed(dist_load_reg_837) > $signed(grp_fu_322_p2)) ? 1'b1 : 1'b0);

assign icmp_ln36_6_fu_720_p2 = (($signed(dist_load_1_reg_879) > $signed(add_ln36_1_fu_714_p2)) ? 1'b1 : 1'b0);

assign icmp_ln36_7_fu_736_p2 = (($signed(dist_load_2_reg_886) > $signed(add_ln36_2_fu_730_p2)) ? 1'b1 : 1'b0);

assign icmp_ln36_8_fu_741_p2 = (($signed(dist_load_3_reg_898) > $signed(grp_fu_322_p2)) ? 1'b1 : 1'b0);

assign icmp_ln36_9_fu_752_p2 = (($signed(dist_load_4_reg_903) > $signed(add_ln36_4_fu_746_p2)) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = gmem_addr_reg_922;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd5;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 32'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign or_ln21_fu_378_p2 = (reuse_select_fu_367_p3 | icmp_ln21_fu_373_p2);

assign prevNode_d0 = select_ln21_14_reg_908;

assign reuse_select12_fu_522_p3 = ((addr_cmp11_fu_516_p2[0:0] == 1'b1) ? reuse_reg_fu_104 : visited_load_3_reg_893);

assign reuse_select16_fu_583_p3 = ((addr_cmp15_fu_577_p2[0:0] == 1'b1) ? reuse_reg_fu_104 : visited_q0);

assign reuse_select4_fu_408_p3 = ((addr_cmp3_fu_402_p2[0:0] == 1'b1) ? reuse_reg_fu_104 : visited_load_1_reg_844);

assign reuse_select8_fu_467_p3 = ((addr_cmp7_fu_461_p2[0:0] == 1'b1) ? reuse_reg_fu_104 : visited_load_2_reg_849);

assign reuse_select_fu_367_p3 = ((addr_cmp_reg_874[0:0] == 1'b1) ? reuse_reg_fu_104 : visited_load_reg_869);

assign select_ln21_10_fu_494_p3 = ((reuse_select8_fu_467_p3[0:0] == 1'b1) ? sext_ln21_fu_443_p1 : select_ln21_2_fu_479_p3);

assign select_ln21_11_fu_502_p3 = ((reuse_select8_fu_467_p3[0:0] == 1'b1) ? select_ln21_9_fu_447_p3 : select_ln21_6_fu_487_p3);

assign select_ln21_12_fu_551_p3 = ((reuse_select12_fu_522_p3[0:0] == 1'b1) ? select_ln21_10_fu_494_p3 : select_ln21_3_fu_535_p3);

assign select_ln21_13_fu_563_p3 = ((reuse_select12_fu_522_p3[0:0] == 1'b1) ? select_ln21_11_fu_502_p3 : select_ln21_7_fu_543_p3);

assign select_ln21_14_fu_605_p3 = ((reuse_select16_fu_583_p3[0:0] == 1'b1) ? sext_ln21_1_fu_559_p1 : select_ln21_4_fu_597_p3);

assign select_ln21_15_fu_384_p3 = ((or_ln21_fu_378_p2[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign select_ln21_1_fu_420_p3 = ((icmp_ln21_1_fu_415_p2[0:0] == 1'b1) ? 2'd1 : select_ln21_15_fu_384_p3);

assign select_ln21_2_fu_479_p3 = ((icmp_ln21_2_fu_474_p2[0:0] == 1'b1) ? 3'd2 : sext_ln21_fu_443_p1);

assign select_ln21_3_fu_535_p3 = ((icmp_ln21_3_fu_529_p2[0:0] == 1'b1) ? 3'd3 : select_ln21_10_fu_494_p3);

assign select_ln21_4_fu_597_p3 = ((icmp_ln21_4_fu_591_p2[0:0] == 1'b1) ? 4'd4 : sext_ln21_1_fu_559_p1);

assign select_ln21_5_fu_428_p3 = ((icmp_ln21_1_fu_415_p2[0:0] == 1'b1) ? dist_load_1_reg_879 : select_ln21_fu_392_p3);

assign select_ln21_6_fu_487_p3 = ((icmp_ln21_2_fu_474_p2[0:0] == 1'b1) ? dist_load_2_reg_886 : select_ln21_9_fu_447_p3);

assign select_ln21_7_fu_543_p3 = ((icmp_ln21_3_fu_529_p2[0:0] == 1'b1) ? dist_q1 : select_ln21_11_fu_502_p3);

assign select_ln21_8_fu_435_p3 = ((reuse_select4_fu_408_p3[0:0] == 1'b1) ? select_ln21_15_fu_384_p3 : select_ln21_1_fu_420_p3);

assign select_ln21_9_fu_447_p3 = ((reuse_select4_fu_408_p3[0:0] == 1'b1) ? select_ln21_fu_392_p3 : select_ln21_5_fu_428_p3);

assign select_ln21_fu_392_p3 = ((reuse_select_fu_367_p3[0:0] == 1'b1) ? 32'd2147483647 : dist_load_reg_837);

assign sext_ln21_1_fu_559_p1 = $signed(select_ln21_12_fu_551_p3);

assign sext_ln21_fu_443_p1 = $signed(select_ln21_8_fu_435_p3);

assign sext_ln33_fu_684_p1 = $signed(trunc_ln1_fu_674_p4);

assign shl_ln33_1_fu_651_p3 = {{trunc_ln31_fu_619_p1}, {2'd0}};

assign shl_ln_fu_639_p3 = {{trunc_ln31_fu_619_p1}, {4'd0}};

assign trunc_ln1_fu_674_p4 = {{add_ln33_fu_668_p2[63:2]}};

assign trunc_ln31_fu_619_p1 = select_ln21_14_fu_605_p3[2:0];

assign visited_addr_1_reg_815 = 64'd3;

assign visited_addr_3_reg_795 = 64'd2;

assign visited_addr_reg_859 = 64'd4;

assign visited_d0 = 1'd1;

assign zext_ln31_fu_623_p1 = trunc_ln31_fu_619_p1;

assign zext_ln33_1_fu_659_p1 = shl_ln33_1_fu_651_p3;

assign zext_ln33_fu_647_p1 = shl_ln_fu_639_p3;

endmodule //dijkstra_dijkstra_Pipeline_VITIS_LOOP_14_2
